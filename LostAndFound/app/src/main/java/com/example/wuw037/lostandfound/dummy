package com.example.wuw037.lostandfound;

/**
 * Created by wuw037 on 6/7/17.
 */

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.TextView;
import android.widget.Toast;

import org.w3c.dom.Text;

import java.util.ArrayList;
import java.util.List;

// Create the basic adapter extending from RecyclerView.Adapter
// Note that we specify the custom ViewHolder which gives us access to our views
public class LostListAdapter extends RecyclerView.Adapter<LostListAdapter.ViewHolder> {

   public static class ViewHolder extends RecyclerView.ViewHolder {
       public TextView nameView;
       public TextView bountyView;
       public View rowView;
       public ViewHolder(View itemView){
           super(itemView);
           nameView = (TextView) itemView.findViewById(R.id.name);
           bountyView = (TextView) itemView.findViewById(R.id.bounty);
           rowView = itemView.findViewById(R.id.row);
       }

   }

    private List<Item> mItems;
    private Context mContext;
    public LostListAdapter(Context context, List<Item> items){
        mItems = items;
        mContext = context;
    }

    private Context getContext(){
        return mContext;
    }

    @Override
    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType){
        Context context = parent.getContext();
        LayoutInflater inflater = LayoutInflater.from(context);

        View itemView = inflater.inflate(R.layout.item, parent, false);

        ViewHolder viewHolder = new ViewHolder(itemView);
        return viewHolder;
    }

    @Override
    public void onBindViewHolder(ViewHolder viewHolder, int position){
        Item item = mItems.get(position);

        TextView itemName = viewHolder.nameView;
        TextView itemBounty = viewHolder.bountyView;
        //View itemRow = viewHolder.rowView;

        itemName.setText(item.getName());
        itemBounty.setText(item.getBounty());


    }

    // Returns the total count of items in the list
    @Override
    public int getItemCount() {
        return mItems.size();
    }



}








